version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Running Frontend preBuild"
        - yarn add react-scripts
        - yarn install --frozen-lockfile
    build:
      commands:
        - echo "Running Frontend build"
        - yarn run build --verbose
  artifacts:
    baseDirectory: build
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
backend:
  phases:
    preBuild:
      commands:
        - echo "Running Backend preBuild"
        - pwd
        - pushd amplify/backend/function/FetchEC2Instances/
        - python3 --version  # Check the Python version
        - python3 -m pip install boto3 moto --user
        - python3 -m pip list --user
        - pwd
        - popd
        # - python3 -m venv venv
        # - source venv/bin/activate
    # build:
    #   commands:
    #     - echo "Running Backend build"
    #     - amplify push --yes
#   function:
#       FetchEC2Instancies:
#         handler: src/index.py
#         test:
#           runner: jest
#           test: src/test_lambda.py
test:
  phases:
    # preTest:
    #   commands:
    #     - *enter command*
    test:
      commands:
        - export BASE_PATH=$(pwd)
        - set -euo pipefail
        - echo "Base path = ${BASE_PATH}"
        - cd amplify/backend/function/FetchEC2Instances/src/test
        - python3 --version  # Check the Python version
        - python3 -m pip install boto3 moto --user
        - python3 -m pip list --user
        - pwd
        - rm -rfv ./logs/ && mkdir -p ./logs/
        - python3 -m unittest test_lambda.py | tee ./logs/test_lambda.logs
        - cd ${BASE_PATH}
  #   postTest:
  #     commands:
  #       - *enter command*
  artifacts:
    baseDirectory: amplify/backend/function/FetchEC2Instances/logs/
    files:
      - '**/*'
